<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAADJ0RVh0Q29tbWVudAB4cjpkOkRBRmltUDZzeUw0OjIsajo0NDU1MTM2NzI4LHQ6
        MjMwNTExMDi2MIYBAAAfhUlEQVR4Xu3dC7Stc/kv8EiyI7KFg1xyyy38EZs/Crkml002kRKDQ6NyVKfT
        5ciRji66H5FORy5HJUepNBK6DwkNjQxFjKhUilIUuv3n8UxzruZa+1l7zneuufZez16fZ4zPsNd3vu/v
        fdfFfOZ7f8oT1QIAyktDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklD
        AKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQA
        aklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCW
        NAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklD
        AKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQA
        aklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCW
        NAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklD
        AKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQA
        aklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCW
        NAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklDAKCWNAQAaklD
        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
        gFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACo
        JQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrS
        EACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0B
        gFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACo
        JQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrS
        EACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0B
        gFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACo
        JQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrS
        EACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0B
        gFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACo
        JQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgFrSEACoJQ0BgDKe0vr/tznl3n/46pwAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>